package components.ppu.rendering;

import java.awt.Color;

public enum NesColors {
	// Ligne 0
	X00(0x55, 0x55, 0x55), X01(0x00, 0x17, 0x73), X02(0x00, 0x07, 0x86), X03(0x2E, 0x05, 0x78), X04(0x59, 0x02, 0x4D),
	X05(0x72, 0x00, 0x11), X06(0x6E, 0x00, 0x00), X07(0x4C, 0x08, 0x00), X08(0x17, 0x1B, 0x00), X09(0x00, 0x2A, 0x00),
	X0A(0x00, 0x31, 0x00), X0B(0x00, 0x2E, 0x08), X0C(0x00, 0x26, 0x45), X0D(0x00, 0x00, 0x00), X0E(0x00, 0x00, 0x00),
	X0F(0x00, 0x00, 0x00),

	// Ligne 1
	X10(0xA5, 0xA5, 0xA5), X11(0x00, 0x57, 0xC6), X12(0x22, 0x3F, 0xE5), X13(0x6E, 0x28, 0xD9), X14(0xAE, 0x1A, 0xA6),
	X15(0xD2, 0x17, 0x59), X16(0xD1, 0x21, 0x07), X17(0xA7, 0x37, 0x00), X18(0x63, 0x51, 0x00), X19(0x18, 0x67, 0x00),
	X1A(0x00, 0x72, 0x00), X1B(0x00, 0x73, 0x31), X1C(0x00, 0x6A, 0x84), X1D(0x00, 0x00, 0x00), X1E(0x00, 0x00, 0x00),
	X1F(0x00, 0x00, 0x00),

	// Ligne 2
	X20(0xFE, 0xFF, 0xFF), X21(0x2F, 0xA8, 0xFF), X22(0x5D, 0x81, 0xFF), X23(0x9C, 0x70, 0xFF), X24(0xF7, 0x72, 0xFF),
	X25(0xFF, 0x77, 0xBD), X26(0xFF, 0x7E, 0x75), X27(0xFF, 0x8A, 0x2B), X28(0xCD, 0xA0, 0x00), X29(0x81, 0xB8, 0x02),
	X2A(0x3D, 0xC8, 0x30), X2B(0x12, 0xCD, 0x7B), X2C(0x0D, 0xC5, 0xD0), X2D(0x3C, 0x3C, 0x3C), X2E(0x00, 0x00, 0x00),
	X2F(0x00, 0x00, 0x00),

	// Ligne 3
	X30(0xFE, 0xFF, 0xFF), X31(0xA4, 0xDE, 0xFF), X32(0xB1, 0xC8, 0xFF), X33(0xCC, 0xBE, 0xFF), X34(0xF4, 0xC2, 0xFF),
	X35(0xFF, 0xC5, 0xEA), X36(0xFF, 0xC7, 0xC9), X37(0xFF, 0xCD, 0xAA), X38(0xEF, 0xD6, 0x96), X39(0xD0, 0xE0, 0x95),
	X3A(0xB3, 0xE7, 0xA5), X3B(0x9F, 0xEA, 0xC3), X3C(0x9A, 0xE8, 0xE6), X3D(0xAF, 0xAF, 0xAF), X3E(0x00, 0x00, 0x00),
	X3F(0x00, 0x00, 0x00);

	private int r, g, b;

	private NesColors(int r, int g, int b) {
		this.r = r;
		this.g = g;
		this.b = b;
	}

	public Color getColorFromCode() {
		return new Color(r, g, b);
	}

	public int getRGBFromCode() {
		return getColorFromCode().getRGB();
	}

	public static NesColors getColorCode(int code) {
		for (NesColors palette : NesColors.values()) {
			if (Integer.parseInt(palette.name().substring(1), 16) == code)
				return palette;
		}
		return X0D;
	}

	@Override
	public String toString() {
		return String.format("%s (%d %d %d)", this.name(), r, g, b);
	}
}
